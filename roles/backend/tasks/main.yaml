- name: disable nodejs
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: eanble nodejs
  ansible.builtin.command: "dnf module enable nodejs:20 -y"

- name: install nodejs and mysql server
  ansible.builtin.package:
    name:
    - nodejs
    - mysql-server
    state: present

- name: create expense user
  ansible.builtin.user:
    name: expense
    state: present

- name: create app dir
  ansible.builtin.file:
    path: /app
    state: directory
    
- name:  download the backend code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip
    
- name: unarachive backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: download dependencies
  ansible.builtin.command: "npm install"
  args:
    chdir: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install pymysql  to ansible
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    target: "/app/schema/backend.sql"
    state: "import"
    name: all

- name: backend daemon-reload
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: true
    daemon_reload: true


